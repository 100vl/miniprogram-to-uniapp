#! /usr/bin/env node

const program = require('commander');
const chalk = require('chalk');
const path = require('path');
const fs = require('fs');

const transform = require('../src/index');
const { log } = require('../src/utils/utils');
const pkg = require('../package.json');

process.on('exit', () => console.log());

program
    .version(pkg.version)
    .usage('[options]')
    .option('-i, --input', 'the input path for weixin miniprogram project')
    .option('-c, --cli [type]', 'the type of output project is vue-cli, which default value is false', false)
    .option('-w, --wxs [type]', 'transform wxs file to js file, which default value is false', false)
    .option('-z, --vant [type]', 'transform vant-weapp project to uni-app, which default value is false', false)
    .parse(process.argv);

program.on('--help', function () {
    console.log();
    console.log('  Examples:');
    console.log();
    console.log(chalk.gray('    # transform a weixin miniprogram project to uni-app project'));
    console.log();
    console.log('    $ wtu -i ./miniprogramProject');
    console.log();
}); 



function help () {
    if (program.args.length < 1) {
        return program.help();
    }
}

help();

let src = program.args[0];
let dist = "";
let isVueAppCliMode = program.cli;
let isTransformWXS = program.wxs;
let isVantProject = program.vant;

src = path.resolve(process.cwd(), src);

if (!fs.existsSync(src)) {
    log(`The source folder dose not exist: ${src}`);
    process.exit();
}

transform(src, dist, isVueAppCliMode, isTransformWXS, isVantProject);

